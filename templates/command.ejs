<%
const className = name.charAt(0).toUpperCase() + name.slice(1)
%>import {Command} from "kb2abot"

export default class <%=className%> extends Command {
	keywords = ["<%=name%>"];<%if (!clean) {%>
	// keywords[0] MUST be unique to distinguish it from other commands!
	// Keywords is to call the command <%=name%> (other than keywords[0] is alias)
	// For example, with keywords = ["test"], when someone message /test, this command onCall method will be called<%}%>
	description = "Description of <%=name%>";
	guide = "";<% if (!clean) {%> // Parameters guiding in /help interface<%}%>
	permission = {
		"*": "*"
	};<% if (!clean) {%>
	// On the left-side is threadID (eg: '3026469720745071'), note: '*' means all threads
	// On the right-side is the permission, can be:
	// "*" : Everyone
	// "admin" : Thread admins only
	// "superAdmin" : Super admins only (kb2abot-dedicated-server admins)
	// ["100007723935647", "100026785898608"] : Array of userid
	// If the right-side is [], means no one will be able to use this command<%}%>
<% if (!clean) {%>
	// Called after this command is constructored, you can put "await this.add(some_command)" in this function to load commands in synchronous<%}%>
	async load() {

	}
<% if (!clean) {%>
	// Called when user hits command<%}%>
	async onCall(thread, message, reply, api) {

	}
}
